---
# tasks file for openvpn

# Use an IP other than that used to connect to administer the box if defined...
- name: "Set VPN IP Address"
  set_fact:
    public_ip: "{{ ansible_ssh_host }}"
  when: "public_ip is not defined"

- name: "Openvpn: Install dependencies."
  yum: pkg={{ item }} state=present
  with_items:
  - openvpn
  - git
  - expect
  - openssl
  - automake
  - libtool
  - pam-devel
  when: ansible_distribution == 'CentOS'

- name: "Openvpn: Install dependencies."
  apt: pkg={{ item }} state=present
  with_items:
  - openvpn
  - git
  - expect
  - openssl
  - automake
  - libtool
  - libpam-dev
  when: ansible_distribution == 'Debian'

- name: "Create User"
  user:
    name="{{ item.name }}"
    comment="{{ item.comment }}"
    shell="{{ item.shell }}"
    system="yes"
    state="present"
    createhome="{{ item.createhome }}"
    uid="{{ item.uid }}"
  with_items:
    - { name: 'vpndata', comment: 'Vpndata', shell: '/bin/sh', createhome: 'yes', uid: '451' }

- name: "Checkout easyrsa"
  git: update="yes" repo="https://github.com/OpenVPN/easy-rsa" dest="/usr/local/src/easyrsa"

- name: "Copy easyrsa3 to openvpn"
  shell: >
    cp -r /usr/local/src/easyrsa/easyrsa3 /etc/openvpn/easyrsa
  args:
    creates: /etc/openvpn/easyrsa
    
- name: "Upload easyrsa vars"
  template: src="etc/openvpn/easyrsa/vars.j2" dest="/etc/openvpn/easyrsa/vars"
  
- name: "Upload build-ca script"
  template: src="etc/openvpn/easyrsa/build-ca-script.exp.j2" dest="/etc/openvpn/easyrsa/build-ca-script.exp" mode="0755"

- name: "Init PKI"
  shell: >
    ./easyrsa init-pki
  args:
    creates: /etc/openvpn/easyrsa/pki
    chdir: /etc/openvpn/easyrsa

- name: "Setup CA Certificate"
  shell: >
    ./build-ca-script.exp
  args:
    creates: /etc/openvpn/easyrsa/pki/ca.crt
    chdir: /etc/openvpn/easyrsa

- name: "Stat dh"
  stat: path=/etc/openvpn/easyrsa/pki/dh.pem
  register: dh_stat

- name: "Build Diffie Hellman"
  shell: chdir=/etc/openvpn/easyrsa nohup ./easyrsa gen-dh
  async: 20000
  poll: 0
  when: dh_stat.stat.exists == False
    
- name: "Setup Main Certificate"
  shell: >
    ./easyrsa build-server-full main nopass
  args:
    creates: /etc/openvpn/easyrsa/pki/issued/main.crt
    chdir: /etc/openvpn/easyrsa

- name: "Setup Client Certificate"
  shell: >
    ./easyrsa build-client-full client nopass
  args:
    creates: /etc/openvpn/easyrsa/pki/issued/client.crt
    chdir: /etc/openvpn/easyrsa

- name: "Setup ta Cert"
  shell: >
    openvpn --genkey --secret /etc/openvpn/easyrsa/pki/private/ta.key
  args:
    creates: /etc/openvpn/easyrsa/pki/private/ta.key
    chdir: /etc/openvpn/easyrsa/pki/private

- name: "Upload OpenVPN Server Config"
  template: src="etc/openvpn/server.conf.j2" dest="/etc/openvpn/server.conf" mode="0750" owner="vpndata" group="vpndata"

- name: "Create Log Dir"
  file: path="/var/log/openvpn" state="directory" mode="0750" owner="vpndata" group="vpndata"

- name: "Create CCD"
  file: path="/etc/openvpn/ccd" state="directory" mode="0750" owner="vpndata" group="vpndata"

- name: "Checkout Google Authenticator"
  git:
    update: "yes"
    repo: "https://github.com/google/google-authenticator-libpam.git"
    dest: "/usr/local/src/google-authenticator"
  when: "two_fa is not defined or two_fa|bool != False"

- name: "Auto-reconf Google Auth"
  shell: >
    autoreconf --install
  args:
    chdir: /usr/local/src/google-authenticator/
  when: "two_fa is not defined or two_fa|bool != False"

- name: "Configure Google Auth"
  shell: >
    ./configure
  args:
    chdir: /usr/local/src/google-authenticator/
  when: "two_fa is not defined or two_fa|bool != False"

- name: "Make Google Auth"
  shell: >
    make
  args:
    chdir: /usr/local/src/google-authenticator/
  when: "two_fa is not defined or two_fa|bool != False"

- name: "Install Google Auth"
  shell: >
    make install
  args:
    chdir: /usr/local/src/google-authenticator/
  when: "two_fa is not defined or two_fa|bool != False"

- name: "Upload OpenVPN Server Config"
  template: src="etc/pam.d/openvpn.j2" dest="/etc/pam.d/openvpn" mode="0644" owner="root" group="root"

- name: "Template Client Config"
  template: src="etc/openvpn/client.ovpn.j2" dest="/etc/openvpn/client.ovpn" mode="0644"

- name: "Tar a client config up"
  shell: >
    tar -pczvf client.tar.gz client.ovpn easyrsa/pki/ca.crt easyrsa/pki/issued/client.crt easyrsa/pki/private/client.key easyrsa/pki/private/ta.key
  args:
    creates: /etc/openvpn/client.tar.gz
    chdir: /etc/openvpn/
    
- name: "Download the client config"
  fetch: src="/etc/openvpn/client.tar.gz" dest="~/Downloads/"
  
- name: "Check networing var"
  lineinfile: dest="/etc/sysconfig/network" regexp="^NETWORKING" line="NETWORKING=YES"
  when: ansible_distribution == 'CentOS'

# todo... systemd stuff... (service name openvpn@server.service)

- name: "Start OpenVPN"
  service:
    name: openvpn@server
    state: restarted
